Client = Client making requests to system; exposed API: GET, PUT, DELETE, ADD_SHARD
Master = Shard system master; single master, cannot fail
Cluster = Paxos cluster
Leader = Shard paxos master
Replica = Shard paxos replica

#####################################################
#                                                   #
#                K-V Restrictions                   #
#                                                   #
#####################################################

Keys: Only alphanumeric
Values: Cannot be "None", cannot contain "|" (pipe character)

#####################################################
#                                                   #
#               Metadata Included                   #
#                                                   #
#####################################################

# Client to Master: "Type,CSN Data"
# (
#   Type,
#   Client Sequence Number,
#   Data
# )
#
# Master to Client: "Type,CSN Data"
# (
#   Type,
#   Client Sequence Number,
#   Data
# )
#
# Master to paxos primary (and shard replicas on broadcast): "Type,MSN,SMRV Data"
# (
#   Type,
#   Master Sequence Number,
#   Shard Most Recent View,
#   Data
# )
#
# Replicas to Paxos Client (learners to Master): "Type,MSN,SMRV Data"
# (
#   Type,
#   Master Sequence Number,
#   Shard Most Recent View,
#   Data
# )
#
# Replica to Replica (Mostly Unchanged): "Type,SN,CIP,CPORT,View Data"
# (
#   Type,
#   Sequence Number,
#   Client IP,
#   Client Port,
#   Associated View,
#   Data
# )

#####################################################
#                                                   #
#                 Message Data                      #
#                                                   #
#####################################################

##########################
##  Replica to Replica  ##
##########################

PREPARE_REQUEST: # Broadcast
    Proposal number

PREPARE_ALLOW: # To specific Replica
    Proposal number
    Accepted proposal number
    Accepted request type
    Accepted request key
    Accepted request value

PREPARE_DISALLOW: # To specific Replica
    Proposal number
    Accepted proposal number
    Accepted request type
    Accepted request key
    Accepted request val

SUGGESTION_REQUEST: # Broadcast
    Proposal number
    Client Sequence Number ## SWITCHED
    Request type
    Request key
    Request value

SUGGESTION_FAILURE: # To specific Replica
    (promised) Proposal number
    Accepted Prop Num
    Accepted request type
    Accepted request key
    Accepted request value

SUGGESTION_ACCEPT: # Broadcast
    Accepted Prop Num
    Client Sequence Number ## SWITCHED
    Accepted request type
    Accepted request key
    Accepted request value

HIGHEST_OBSERVED:
    (No data)

HOLE_REQUEST:
    (No data)

HOLE_RESPONSE:
    Client ID
    Slient Sequence Number
    Accepted Value [RequestType, RT_Data]


###############################
##  Replica to Paxos Client  ##
###############################

VALUE_LEARNED:
    Learned request key
    Learned request value


########################
##  Client to Master  ##
##  Master to Paxos   ##
########################

GET_REQUEST:
    Key,'None'

GET_RESPONSE:
    [Key,Value] or [Error] <- No commas in Error

PUT_REQUEST:
    Key,Value

PUT_RESPONSE:
    [Key,Value] or [Error] <- No commas in Error

DELETE_REQUEST:
    Key,'None'

DELETE_RESPONSE:
    [Key,'Success'] or [Error] <- No commas in Error


###############################
##  Client to Master (ONLY)  ##
##  Master to Client (also)  ##
###############################

ADD_SHARD_REQUEST:
    IP_1,PORT_1 IP_2,PORT_2, IP_3,PORT_3, ..., IP_N,PORT_N

ADD_SHARD_RESPONSE:
    'Success' or [Error] <- anything not 'Success'


#########################
##  ADD_SHARD PROCESS  ##
#########################

START_SHARD: (Master -> nsLeader)
    LowerKeyBound,UpperKeyBound,osLeaderId|osIP1,osPort1|...|osIPN,osPortN

BEGIN_STARTUP: (nsLeader -> nsReplicas) (Paxos)
    LowerKeyBound,UpperKeyBound

SEND_KEYS_REQUEST: (nsLeader -> osLeader) - osBroadcast on timeout
    LowerKeyBound,UpperKeyBound,nsLeaderId|nsIP1,nsPort1|...|nsIPN,nsPortN

SEND_KEYS: (osLeader -> osReplicas) (Paxos)
    LowerKeyBound,UpperKeyBound,nsLeaderId|nsIP1,nsPort1|...|nsIPN,nsPortN

SEND_KEYS_RESPONSE: (osLearners -> nsLeader) - nsBroadcast on timeout
    Key1,Value1|Key2,Value2|Key3,Value3|...|KeyN,ValueN <- Split Key,Value on first ',' Values cannot contain '|'

KEYS_LEARNED: (nsLeader -> osReplicas to avoid timeout after SEND_KEYS_RESPONSE)
    No data

SHARD_READY: (nsLeader -> nsReplicas) (Paxos)
    No data

SHARD_READY: (nsLearners -> Master)
    LowerKeyBound,UpperKeyBound
